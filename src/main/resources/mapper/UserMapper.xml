<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.syn.springmvc.dao.UserMapper" >
    <resultMap id="userMap" type="User" >
        <id column="id" property="id" javaType="int"/>
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="qq" property="qq" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="entro_time" property="entro_time" jdbcType="BIGINT" />
        <result column="school" property="school" jdbcType="VARCHAR" />
        <result column="number" property="number" javaType="int" />
        <result column="diary_link" property="diary_link" javaType="java.lang.String"  />
        <result column="slogan" property="slogan" jdbcType="VARCHAR" />
        <result column="brother" property="brother" jdbcType="VARCHAR" />
        <result column="create_at" property="create_at" javaType="java.lang.Long" />
        <result column="update_at" property="update_at" javaType="java.lang.Long" />
    </resultMap>
    <!--添加单条数据，ID属性被封装到了user对象中-->
    <insert id="add"  parameterType="User">
          <selectKey keyProperty="id" order="AFTER" resultType="int">
              select LAST_INSERT_ID()
          </selectKey>
        insert into user(name,qq,type,entro_time,school,number,diary_link,slogan,brother,create_at,update_at) VALUES
        (#{name},#{qq},#{type},#{entro_time},#{school},#{number},#{diary_link},#{slogan},#{brother},#{create_at},#{update_at});
    </insert>
    <!--&lt;!&ndash;批量添加数据&ndash;&gt;-->
    <!--<insert id="batchAdd">-->
       <!--insert into user(name,qq,type,entro_time,school,number,diary_link,slogan,brother,create_at,update_at) VALUES-->
      <!--<foreach collection="list" item="user" separator="," >-->
          <!--(#{user.name},#{user.qq},#{user.type},#{user.entro_time},#{user.school},#{user.number},#{user.diary_link},#{user.slogan},#{user.brother},#{user.create_at},#{user.update_at})-->
      <!--</foreach>-->
    <!--</insert>-->
    <!--更新单条数据-->
    <update id="update" parameterType="User" >
       UPDATE user
        <!--<set>-->
            <!--<if test="user.name!=null">name=#{user.name},</if>-->
            <!--<if test="user.qq!=null">qq=#{user.qq},</if>-->
            <!--<if test="user.type!=null">type=#{user.type},</if>-->
            <!--<if test="user.entro_time!=null">entro_time=#{user.entro_time},</if>-->
            <!--<if test="user.school!=null">school=#{user.school},</if>-->
            <!--<if test="user.number!=null">number=#{user.number},</if>-->
            <!--<if test="user.diary_link!=null">diary_link=#{user.diary_link},</if>-->
            <!--<if test="user.slogan!=null">slogan=#{user.slogan},</if>-->
            <!--<if test="user.brother!=null">brother=#{user.brother},</if>-->
            <!--<if test="user.create_at!=''">create_at=#{user.create_at},</if>-->
            <!--<if test="user.update_at!=null">update_at=#{user.update_at},</if>-->
        <!--</set>-->
        <!--<
        //使用set或trim标签都是可以的>-->
        <trim prefix="set" suffixOverrides=",">
            <if test="user.name!=null">name=#{user.name},</if>
            <if test="user.qq!=null">qq=#{user.qq},</if>
            <if test="user.type!=null">type=#{user.type},</if>
            <if test="user.entro_time!=null">entro_time=#{user.entro_time},</if>
            <if test="user.school!=null">school=#{user.school},</if>
            <if test="user.number!=null">number=#{user.number},</if>
            <if test="user.diary_link!=null">diary_link=#{user.diary_link},</if>
            <if test="user.slogan!=null">slogan=#{user.slogan},</if>
            <if test="user.brother!=null">brother=#{user.brother},</if>
            <if test="user.create_at!=null">create_at=#{user.create_at},</if>
            <if test="user.update_at!=null">update_at=#{user.update_at},</if>
        </trim>
        <where>
                id=#{user.id}
        </where>
    </update>

    <!--删除单条数据（根据ID删除）-->
    <delete id="delete" parameterType="int">
      DELETE from user
      <where>
          <if test="id>0">
              id=#{id}
          </if>
      </where>
    </delete>

    <!--根据ID查找数据-->
    <select id="findById" resultMap="userMap" parameterType="int" >
        select * from user
        <where>
            <if test="id !=null">
                id = #{id}
            </if>
        </where>
    </select>
    <!--根据name查找数据，可返回含有多个数据的结果集-->
    <!--<select id="findByName" resultType="User" parameterType="String">-->
        <!--select * from user where name=#{name}-->
    <!--</select>-->
    <!--&lt;!&ndash;根据学号查找数据&ndash;&gt;-->
    <!--<select id="findByNumber" resultType="User" parameterType="int">-->
         <!--select * from user where number=#{number}-->
    <!--</select>-->
    <!--查找所有数据-->
    <select id="findAll" resultType="User" resultMap="userMap">
        select * from user
    </select>
    <select id="findUsersByPage" resultType="User" parameterType="int">
select * from user limit #{start},#{perPageUsers}
    </select>


</mapper>